# the LPGROUPS set is required by all simulations using codes. Multiple groups 
# can be entered (only one is here for our example), each consisting of a set 
# of application- and codes-specific key-value pairs. 
LPGROUPS
{
   # in our simulation, we simply have a set of servers, each with 
   # point-to-point access to each other
   ASPEN_SERVERS
   {
      # required: number of times to repeat the following key-value pairs
      repetitions="16"; 
      # application-specific: parsed in main
      server="1";
      # model-net-specific field defining the network backend. In this example, 
      # each server has one NIC, and each server are point-to-point connected
      modelnet_simplenet="1";
   }
}
# required by CODES: miscellaneous parameters used in the simulation that 
# don't fit in group definition. 
PARAMS
{
   # ROSS-specific parmeters:
   # - message_size: ROSS expects you to upper bound your event message size.
   #                 Going over this size will crash or otherwise destroy your 
   #                 simulation.
   message_size="280";
   # - pe_mem_factor: this is a multiplier to the event memory allocation that
   #                  ROSS does up front (multiplier is per-PE). Increase this 
   #                  (or change the associated mem_factor variable in
   #                  codes-base) if you have a (very) large event population.
   pe_mem_factor="512";
   # model-net-specific parameters: 
   # - individual packet sizes for network operations
   #   (each "packet" is represented by an event)
   # - independent of underlying network being used
   packet_size="512";
   # - order that network types will be presented to the user in
   #   model_net_set_params. In this example, we're only using a single
   #   network
   modelnet_order=("simplenet");
   # - message scheduling algorithm (on a per-packet basis)
   modelnet_scheduler="fcfs"; # first come first serve
   # modelnet_scheduler="round-robin"; # round-robin
   # - model-specific parameters
   net_startup_ns="1.5";
   net_bw_mbps="20000";
   # this param specifies how many network-computation rounds to perform
   num_rounds="16";
   # NOTE: while doing several identical rounds is wasteful and the result
   # of one round could simply be multiplied, this way will eventually allow
   # several different rounds to be simulated one after another.
   # IDEA: any rounds that are the same could have their times stored, to
   # make the sim run faster.
}

ASPEN_PARAMS
{
   # these params let the aspen computation use the correct 
   # app and machine models, as well as allowing the user to
   # specify which machine socket on which to evaluate the
   # application
   aspen_mach_path="./models/machine/BigTestRig.aspen";
   socket_choice="amd_HD5770";
   aspen_app_path000="./models/fft/1D_FFT.aspen";
   aspen_app_path001="./models/matmul/matmul.aspen";
   aspen_app_path002="./models/fft/1D_FFT.aspen";
   aspen_app_path003="./models/matmul/matmul.aspen";
   aspen_app_path004="./models/fft/1D_FFT.aspen";
   aspen_app_path005="./models/matmul/matmul.aspen";
   aspen_app_path006="./models/fft/1D_FFT.aspen";
   aspen_app_path007="./models/matmul/matmul.aspen";
   aspen_app_path008="./models/fft/1D_FFT.aspen";
   aspen_app_path009="./models/matmul/matmul.aspen";
   aspen_app_path010="./models/fft/1D_FFT.aspen";
   aspen_app_path011="./models/matmul/matmul.aspen";
   aspen_app_path012="./models/fft/1D_FFT.aspen";
   aspen_app_path013="./models/matmul/matmul.aspen";
   aspen_app_path014="./models/fft/1D_FFT.aspen";
   aspen_app_path015="./models/matmul/matmul.aspen";
}

# custom parameter sets can also be added - this one is used to define the
# rounds of communication the servers will undergo
server_pings
{
    # these parameters describe the number and size of messages that will be
    # sent between the server nodes in the network simulation
    num_reqs="512";
    payload_sz="4096";
}
