# the LPGROUPS set is required by all simulations using codes. Multiple groups 
# can be entered (only one is here for our example), each consisting of a set 
# of application- and codes-specific key-value pairs. 
LPGROUPS
{
   # in our simulation, we simply have a set of servers, each with 
   # point-to-point access to each other
   ASPEN_SERVERS
   {
      # required: number of times to repeat the following key-value pairs
      repetitions="36";
      # application-specific: parsed in main
      server="2";
      # model-net-specific field defining the network backend.
      modelnet_dragonfly="2";
      dragonfly_router="1";
   }
}
# required by CODES: miscellaneous parameters used in the simulation that 
# don't fit in group definition. 
PARAMS
{
   # ROSS-specific parmeters:
   # - message_size: ROSS expects you to upper bound your event message size.
   #                 Going over this size will crash or otherwise destroy your 
   #                 simulation.
   message_size="280";
   # - pe_mem_factor: this is a multiplier to the event memory allocation that
   #                  ROSS does up front (multiplier is per-PE). Increase this 
   #                  (or change the associated mem_factor variable in
   #                  codes-base) if you have a (very) large event population.
   pe_mem_factor="512";
   # model-net-specific parameters: 
   # - individual packet sizes for network operations
   #   (each "packet" is represented by an event)
   # - independent of underlying network being used
   packet_size="512";
   # - order that network types will be presented to the user in
   #   model_net_set_params. In this example, we're only using a single
   #   network
   modelnet_order=( "dragonfly" );
   # - message scheduling algorithm (on a per-packet basis)

   modelnet_scheduler="fcfs";
   chunk_size="32";
   # modelnet_scheduler="round-robin";
   num_vcs="1";
   num_routers="4";
   local_vc_size="16384";
   global_vc_size="32768";
   cn_vc_size="16384";
   local_bandwidth="5.25";
   global_bandwidth="4.7";
   cn_bandwidth="5.25";
   message_size="256";
   #routing="adaptive";
   routing="minimal";
   # - model-specific parameters
   net_startup_ns="1.5";
   net_bw_mbps="20000";
}
